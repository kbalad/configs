// Place your key bindings in this file to override the defaults
[
    // misc
    {
      "key": "ctrl+v",
      "command": "extension.vim_ctrl+v",
      "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
    },
    {
      "key": "ctrl+v",
      "command": "-extension.vim_ctrl+v",
      "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
    },
    {
      "key": "ctrl+a",
      "command": "-extension.vim_ctrl+a",
      "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
    },
    {
      "key": "ctrl+c",
      "command": "-extension.vim_ctrl+c",
      "when": "editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl"
    },
    {
      "key": "ctrl+shift+d",
      "command": "actions.find",
      "when": "editorFocus || editorIsOpen"
    },
    {
      "key": "ctrl+f",
      "command": "-actions.find",
      "when": "editorFocus || editorIsOpen"
    },
    {
      "key": "ctrl+e",
      "command": "-editor.action.toggleScreenReaderAccessibilityMode",
      "when": "accessibilityHelpIsShown"
    },
    {
      "key": "ctrl+e",
      "command": "-extension.vim_ctrl+e",
      "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
    },
    // vim turn on/off
    {
      "key": "alt+v",
      "command": "toggleVim"
    },
    // navigation
    {
      "key": "ctrl+h",
      "command": "workbench.action.focusLeftGroup"
    },
    {
      "key": "ctrl+j",
      "command": "workbench.action.focusBelowGroup"
    },
    {
      "key": "ctrl+k",
      "command": "workbench.action.focusAboveGroup"
    },
    {
      "key": "ctrl+l",
      "command": "workbench.action.focusRightGroup"
    },
    // terminal
    {
      "key": "ctrl+t",
      "command": "workbench.action.togglePanel"
    },
    {
      "key": "ctrl+n",
      "command": "workbench.action.terminal.new",
      "when": "terminalFocus"
    },
    {
      "key": "ctrl+a",
      "command": "workbench.action.terminal.focusNext",
      "when": "terminalFocus"
    },
    {
      "key": "ctrl+b",
      "command": "workbench.action.terminal.focusPrevious",
      "when": "terminalFocus"
    },
    // hover
    {
      "key": "h",
      "command": "editor.action.scrollLeftHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "j",
      "command": "editor.action.scrollDownHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "k",
      "command": "editor.action.scrollUpHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "l",
      "command": "editor.action.scrollRightHover",
      "when": "editorHoverFocused"
    },
    // navigation back/forward
    {
      "key": "ctrl+;",
      "command": "workbench.action.navigateBack",
      "when": "canNavigateBack"
    },
    {
      "key": "ctrl+'",
      "command": "workbench.action.navigateForward",
      "when": "canNavigateForward"
    },
    // menu and file tree
    {
      "key": "space e",
      "command": "workbench.action.toggleSidebarVisibility",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      "key": "f",
      "command": "explorer.newFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "d",
      "command": "explorer.newFolder",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "x",
      "command": "filesExplorer.cut",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "y",
      "command": "filesExplorer.copy",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
      "key": "p",
      "command": "filesExplorer.paste",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "ctrl+p",
      "command": "-workbench.action.quickOpen"
    },
  ]